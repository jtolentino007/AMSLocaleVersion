using AMS.Classes;
using DevExpress.XtraReports.UI;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace AMS
{
    public partial class frmInterlocaleReport : DevExpress.XtraBars.Ribbon.RibbonForm
    {
        DataTable dtInterlocale = new DataTable();
        XtraReportInterlocale interlocaleReport = new XtraReportInterlocale();
        public frmInterlocaleReport()
        {
            InitializeComponent();
        }

        private void BindAttendanceToReport()
        {
            using (var adapt = new SqlDataAdapter("GET_INTERLOCALE_ATTENDANCE", Utilities.con))
            {
                adapt.SelectCommand.CommandType = CommandType.StoredProcedure;
                adapt.SelectCommand.Parameters.AddWithValue("@Gathering_Code", lueGatheringType.GetColumnValue("gathering_code").ToString());
                adapt.SelectCommand.Parameters.AddWithValue("@Date", Convert.ToDateTime(dtDateGathering.Text).ToShortDateString());
                adapt.SelectCommand.Parameters.AddWithValue("@Locale", lueLocale.EditValue);
                adapt.Fill(dtInterlocale);
                interlocaleReport.DataSource = dtInterlocale;
            }
        }

        private void SetHeaders()
        {
            interlocaleReport.xrGathering.Text = lueGatheringType.Text;
            interlocaleReport.xrDate.Text = Convert.ToDateTime(dtDateGathering.Text).ToShortDateString();
            interlocaleReport.xrLocale.Text = "LOCALE OF " + lueLocale.EditValue.ToString();
            interlocaleReport.xrGenerateBy.Text = "Generated By :" + frmLogin.Username;
        }

        private void barButtonItem1_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (string.IsNullOrWhiteSpace(lueGatheringType.Text))
            {
                Utilities.ErrorMessage("Please Select Gathering Type");
            }
            else if (string.IsNullOrWhiteSpace(dtDateGathering.Text))
            {
                Utilities.ErrorMessage("Please Enter Date of Gathering");
            }
            else
            {
                BindAttendanceToReport();
                if (dtInterlocale.Rows.Count == 0)
                {
                    Utilities.ErrorMessage("No Interlocale Brethren Attended / Gathering does not exists...");
                }
                else
                {
                    SetHeaders();

                    GroupField gfBatch = new GroupField(dtInterlocale.Columns["Batch_Time"].ToString());
                    interlocaleReport.GroupHeader.GroupFields.Add(gfBatch);

                    interlocaleReport.xrLabelBatch.DataBindings.Add("Text", dtInterlocale, dtInterlocale.Columns["batch_time_lbl"].ToString());
                    interlocaleReport.xrTableCellChurchID.DataBindings.Add("Text", dtInterlocale, dtInterlocale.Columns["Church_Id"].ToString());
                    interlocaleReport.xrTableCellName.DataBindings.Add("Text", dtInterlocale, dtInterlocale.Columns["Interlocale_name"].ToString());
                    interlocaleReport.xrTableCellTimeIn.DataBindings.Add("Text", dtInterlocale, dtInterlocale.Columns["time_in"].ToString());
                    interlocaleReport.xrTableCellStatus.DataBindings.Add("Text", dtInterlocale, dtInterlocale.Columns["tempAttendance_Status"].ToString());
                    interlocaleReport.CreateDocument();

                    ReportPrintTool printTool = new ReportPrintTool(interlocaleReport);
                    printTool.ShowPreview();
                    this.Close();
                }
            }
        }

        private void frmInterlocaleReport_Load(object sender, EventArgs e)
        {
            Utilities.FillLookUpEdit(lueGatheringType, "GET_GATHERING_TYPES", "gathering", "gathering_id");
            Utilities.FillLookUpEdit(lueLocale, "GET_INTERLOCALE_LOCALE", "Locale", "Locale");
        }

        private void barButtonCancel_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Hide();
        }
    }
}
