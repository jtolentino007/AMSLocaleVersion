using AMS.Classes;
using DevExpress.DataAccess.Sql;
using DevExpress.XtraReports.UI;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace AMS
{
    public partial class frmCelebrantsReport : DevExpress.XtraBars.Ribbon.RibbonForm
    {
        DataTable dtGroupings = new DataTable();
        XtraReportGroupings groupingsReport = new XtraReportGroupings();

        public frmCelebrantsReport()
        {
            InitializeComponent();
        }

        private void barButtonCancel_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            this.Close();
        }

        private void BindAttendanceToReport()
        {
            using (var adapt = new SqlDataAdapter("GET_GROUP_LIST", Utilities.con))
            {
                adapt.SelectCommand.CommandType = CommandType.StoredProcedure;
                adapt.SelectCommand.Parameters.AddWithValue("@Group_name", lueGroupingsReport.EditValue);
                adapt.Fill(dtGroupings);
                groupingsReport.DataSource = dtGroupings;
            }
        }

        private void SetHeaders()
        {
            groupingsReport.xrLabelGroupings.Text = lueGroupingsReport.Text;
            groupingsReport.xrLabelUser.Text = "Generated by: " + frmLogin.Username; 
        }

        private void barButtonGenerate_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (string.IsNullOrWhiteSpace(lueGroupingsReport.Text))
            {
                Utilities.ErrorMessage("Please Select Group");
            }
            else
            {
                BindAttendanceToReport();

                if (dtGroupings.Rows.Count == 0)
                    Utilities.ErrorMessage("No Record(s) found");
                else
                {
                    SetHeaders();

                    groupingsReport.xrTableCellChurchID.DataBindings.Add("Text", dtGroupings, dtGroupings.Columns["Church_Id"].ToString());
                    groupingsReport.xrTableCellName.DataBindings.Add("Text", dtGroupings, dtGroupings.Columns["BrethrenName"].ToString());
                    groupingsReport.xrTableCellStatus.DataBindings.Add("Text", dtGroupings, dtGroupings.Columns["Status"].ToString());
                    groupingsReport.CreateDocument();

                    ReportPrintTool printTool = new ReportPrintTool(groupingsReport);
                    printTool.ShowPreview();
                    this.Close();
                }
            }
        }

        private void frmgroupingsReport_Load(object sender, EventArgs e)
        {
            dtGroupings.Clear();
            Utilities.FillLookUpEdit(lueGroupingsReport, "GET_GROUPINGS", "Group_name", "Group_name");
        }
    }
}
